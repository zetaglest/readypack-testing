name: Validate MegaGlest mod

on:
  push:
    branches:
      - master
    tags:
      - v**
  pull_request:
    branches:
      - master

env:
  MOD_NAME: readypack-testing
  RELEASE_NAME: 'readypack'

jobs:
  validate-and-build-mod:
    if: ${{ github.ref_type != 'tag' }}
    runs-on: ubuntu-latest
    env:
      MOD_VERSION: ${{ github.sha }}
    steps:
    - uses: actions/checkout@v3
    - uses: megaglest/gh-action-validate-megaglest-mod@make-tidy
      with:
        name: ${{ env.MOD_NAME }}
        release_name: ${{ env.RELEASE_NAME }}
        type: tech
    - name: Make 7z
      run: |
        cd output
        7z a $RELEASE_NAME.7z $RELEASE_NAME

    - name: Upload Artifacts
      # Uploads artifacts (combined into a zip file) to the workflow output page
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.RELEASE_NAME }}-${{ env.MOD_VERSION }}
        path: "output/${{ env.RELEASE_NAME }}*.7z"

  release-mod:
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    env:
      MOD_VERSION: ${{ github.ref_name }}
    steps:
    - uses: actions/checkout@v3
    - name: Massage Variables
      run: |
        echo "MOD_VERSION=${MOD_VERSION:1}" >> $GITHUB_ENV
    - uses:  megaglest/gh-action-validate-megaglest-mod@make-tidy
      with:
        name: ${{ env.MOD_NAME }}
        release_name: ${{ env.RELEASE_NAME }}
        type: tech
    - name: Make 7z
      run: |
        cd output/$RELEASE_NAME
        sudo mv $RELEASE_NAME.xml $RELEASE_NAME-$MOD_VERSION.xml
        cd ..
        sudo mv $RELEASE_NAME $RELEASE_NAME-$MOD_VERSION
        7z a $RELEASE_NAME-$MOD_VERSION.7z $RELEASE_NAME-$MOD_VERSION
        sudo rm -rf $RELEASE_NAME-$MOD_VERSION
    - name: Create sha256sum
      run:  |
        OUTPUT_FILE="$RELEASE_NAME-$MOD_VERSION.7z"
        cd output
        sha256sum $OUTPUT_FILE > $OUTPUT_FILE.sha256sum
    - name: Release Mod
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: True
        prerelease: False
        artifacts: "output/${{ env.RELEASE_NAME }}*.*"
        token: ${{ secrets.GITHUB_TOKEN }}
        omitNameDuringUpdate: True
        omitBodyDuringUpdate: True
